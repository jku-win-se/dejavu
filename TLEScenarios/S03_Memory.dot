digraph g { graph [ rankdir = "LR"];
node [ fontsize = "12" shape = "record" ];
edge [];
"node0" [
label = "<f0> FreeableMemory | <f1> Original class | <f2> 1.0.10 | <f3> F3"
shape = "record"
color = "black"
];
"node1" [
label = "Extracting
superclass"shape = "oval"
color = "black"
];"node2" [
label = "<f0> Memory | <f1> Extracted superclass | <f2> 1.1.1 | <f3> F3"
shape = "record"
color = "black"
];
"node3" [
label = "<f0> FreeableMemory | <f1> Remnant class | <f2> 1.1.1 | <f3> F3"
shape = "record"
color = "black"
];
"node4" [
label = "Extend
superclass"shape = "oval"
color = "black"
];"node5" [
label = "<f0> RefCountedMemory | <f1> Subclass of Memory | <f2> 1.2.1 | <f3> F3"
shape = "record"
color = "black"
];
"node6" [
label = "Reallocate
methods"shape = "oval"
color = "black"
];"node7" [
label = "<f0> Memory | <f1> Additional methods | <f2> 1.2.1 | <f3> "
shape = "record"
color = "black"
];
"node8" [
label = "<f0> RefCountedMemory | <f1> Additional methods | <f2> 1.2.1 | <f3> F3"
shape = "record"
color = "black"
];
"node9" [
label = "<f0> FreeableMemory | <f1> Deleted | <f2> 1.2.1 | <f3> "
shape = "record"
color = "black"
style = "dashed"];
"node0":f0 -> "node1":f0
[
id = 0
];
"node1":f0 -> "node2":f0
[
id = 1
];
"node1":f0 -> "node3":f0
[
id = 2
];
"node2":f0 -> "node4":f0
[
id = 3
];
"node4":f0 -> "node5":f0
[
id = 4
];
"node3":f0 -> "node6":f0
[
id = 5
];
"node6":f0 -> "node7":f0
[
id = 6
];
"node6":f0 -> "node8":f0
[
id = 7
];
"node6":f0 -> "node9":f0
[
id = 8
];

}
